#Neat guys hi!
#ANOTHER LINE OF CODE
View(airquality)
EUSO2 <- read.csv("~/Git/pollute.github.io/EUSO2.csv")
View(EUSO2)
View(EUSO2)
EUSO2 <- read.csv("~/Git/pollute.github.io/EUSO2.csv")
EUSO2 <- read.csv("~/Git/pollute.github.io/EUSO2.csv")
View(EUSO2)
EUSO2sum = aggregate(ug/m3 ~ country.iso.code, data = EUSO2, FUN = average)
EUSO2sum = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = average)
EUSO2sum = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
View(EUSO2CountryM
View(EUSO2CountryM)
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = function(x){c(mean = mean(x), sd = sd(x)))
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = function(x){c(mean = mean(x), sd = sd(x)}))
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = function(x){c(mean = mean(x), sd = sd(x))})
View(EUSO2CountryM)
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
TriComp = subset (EUSO2, country.iso.code == FR | DE | CZ)
TriComp = subset (EUSO2, country.iso.code == "FR" | "DE" | "CZ")
TriComp = subset (EUSO2, country.iso.code = "FR" | "DE" | "CZ")
View(TriComp)
TriComp = subset (EUSO2, country.iso.code == "FR" | country.iso.code == "DE" | country.iso.code == "CZ")
View(TriComp)
boxplot(TriComp$ug.m3, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
TriComp = data.frame(TriComp)
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
####
# Air Quality Summary Statistics
# Dataset: Air pollutant concentrations 2013 - Dataset by cities (compared to EU values)
# Using SO2 tab
# data taken from http://www.eea.europa.eu/data-and-maps/data/air-pollutant-concentrations-at-station
# Author(s): Elise. (add your name if you work on this)
# Date started: 18 Jan 2016
# Informatics Winter quarter 2016
####
#
# Upload file EUSO2
EUSO2 <- read.csv(file="EUSO2.csv")
# Summarize countries by their mean SO2 concentration across all monitoring stations
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
# Boxplot summary of SO2 measurements taken in France, Germany and Czech Republic
#Creates Subset of Data
TriComp = subset(EUSO2, country.iso.code == "AT" | country.iso.code == "HU" | country.iso.code == "ES")
#Removes now unused Data
TriComp$country.iso.code <- droplevels(TriComp$country.iso.code)
#Plots Data
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
####
# Air Quality Summary Statistics
# Dataset: Air pollutant concentrations 2013 - Dataset by cities (compared to EU values)
# Using SO2 tab
# data taken from http://www.eea.europa.eu/data-and-maps/data/air-pollutant-concentrations-at-station
# Author(s): Elise. (add your name if you work on this)
# Date started: 18 Jan 2016
# Informatics Winter quarter 2016
####
# Upload file EUSO2
EUSO2 <- read.csv(file="EUSO2.csv")
# Summarize countries by their mean SO2 concentration across all monitoring stations
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
# Boxplot summary of SO2 measurements taken in Austria, Hungary and Spain
#Creates Subset of Data
TriComp = subset(EUSO2, country.iso.code == "AT" | country.iso.code == "HU" | country.iso.code == "ES")
#Removes now unused Data
TriComp$country.iso.code <- droplevels(TriComp$country.iso.code)
#Plots Data
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
# Enter Daily Limit Value (DLV) threshold, in ug/m3.
dlv=15
# Determine which sites exceed threshold. If ug.m3 > dlv, "above_DLV." column is 1 (true).
for (i in 1:498){
if(EUS02$ug.m3[i] > dlv){
EUS02$above_DLV.[i] = "1"
}
if(EUS02$ug.m3[i] <= dlv){
EUS02$above_DLV.[i] = "0"
}
}
####
# Air Quality Summary Statistics
# Dataset: Air pollutant concentrations 2013 - Dataset by cities (compared to EU values)
# Using SO2 tab
# data taken from http://www.eea.europa.eu/data-and-maps/data/air-pollutant-concentrations-at-station
# Author(s): Elise. (add your name if you work on this)
# Date started: 18 Jan 2016
# Informatics Winter quarter 2016
####
# Upload file EUSO2
EUSO2 <- read.csv(file="EUSO2.csv")
# Summarize countries by their mean SO2 concentration across all monitoring stations
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
# Boxplot summary of SO2 measurements taken in Austria, Hungary and Spain
#Creates Subset of Data
TriComp = subset(EUSO2, country.iso.code == "AT" | country.iso.code == "HU" | country.iso.code == "ES")
#Removes now unused Data
TriComp$country.iso.code <- droplevels(TriComp$country.iso.code)
#Plots Data
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
# Enter Daily Limit Value (DLV) threshold, in ug/m3.
dlv=15
# Determine which sites exceed threshold. If ug.m3 > dlv, "above_DLV." column is 1 (true).
for (i in 1:498){
if(EUSO2$ug.m3[i] > dlv){
EUSO2$above_DLV.[i] = "1"
}
if(EUSO2$ug.m3[i] <= dlv){
EUSO2$above_DLV.[i] = "0"
}
}
####
# Air Quality Summary Statistics
# Dataset: Air pollutant concentrations 2013 - Dataset by cities (compared to EU values)
# Using SO2 tab
# data taken from http://www.eea.europa.eu/data-and-maps/data/air-pollutant-concentrations-at-station
# Author(s): Elise. (add your name if you work on this)
# Date started: 18 Jan 2016
# Informatics Winter quarter 2016
####
# Upload file EUSO2
EUSO2 <- read.csv(file="EUSO2.csv")
# Summarize countries by their mean SO2 concentration across all monitoring stations
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
# Boxplot summary of SO2 measurements taken in Austria, Hungary and Spain
#Creates Subset of Data
TriComp = subset(EUSO2, country.iso.code == "AT" | country.iso.code == "HU" | country.iso.code == "ES")
#Removes now unused Data
TriComp$country.iso.code <- droplevels(TriComp$country.iso.code)
#Plots Data
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmosphertic SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries")
# Enter Daily Limit Value (DLV) threshold, in ug/m3.
dlv=15
# Determine which sites exceed threshold. If ug.m3 > dlv, "above_DLV." column is 1 (true).
for (i in 1:498){
if(EUSO2$ug.m3[i] > dlv){
EUSO2$above_DLV.[i] = "1"
}
if(EUSO2$ug.m3[i] <= dlv){
EUSO2$above_DLV.[i] = "0"
}
}
View(EUSO2)
View(EUSO2)
####
# Air Quality Summary Statistics
# Dataset: Air pollutant concentrations 2013 - Dataset by cities (compared to EU values)
# Using SO2 tab
# data taken from http://www.eea.europa.eu/data-and-maps/data/air-pollutant-concentrations-at-station
# Authors: Elise, Mitchell, Steph
# Date started: 18 Jan 2016
# Informatics Winter quarter 2016
####
# Upload file EUSO2
EUSO2 <- read.csv(file="EUSO2.csv")
# Summarize countries by their mean SO2 concentration across all monitoring stations
EUSO2CountryM = aggregate(ug.m3 ~ country.iso.code, data = EUSO2, FUN = mean)
# Boxplot summary of SO2 measurements taken in Austria, Hungary and Spain
#Creates Subset of Data
TriComp = subset(EUSO2, country.iso.code == "AT" | country.iso.code == "HU" | country.iso.code == "ES")
#Removes now unused Data
TriComp$country.iso.code <- droplevels(TriComp$country.iso.code)
#Plots Data
boxplot(ug.m3 ~ country.iso.code , data=TriComp, xlab = "Countries", ylab = "Atmospheric SO2 (ug/m3)", main="SO2 Concentrations in Selected EU Countries", col = "gold")
# Enter Daily Limit Value (DLV) threshold, in ug/m3.
# Change DLV as desired.
dlv=10
# Determine which sites exceed threshold. If ug.m3 > dlv, "above_DLV." column is 1 (true).
for (i in 1:498){
if(EUSO2$ug.m3[i] > dlv){
EUSO2$above_DLV.[i] = "1"
}
if(EUSO2$ug.m3[i] <= dlv){
EUSO2$above_DLV.[i] = "0"
}
}
View(EUS02)
# Number of sites exceeding the DLV
above_DLV.count = count(EUS02$above_DLV.)
above_DLV.count[2,2]
View(EUSO2)
View(EUSO2)
pkgs = c(
'readr',        # read csv
'readxl',       # read xls
'dplyr',        # data frame manipulation
'tidyr',        # data tidying
'nycflights13', # test dataset of NYC flights for 2013
'gapminder')    # test dataset of life expectancy and popultion
# install packages if not found
for (p in pkgs){
if (!require(p, character.only=T)){
install.packages(p)
}
}
install.packages(c("digest", "knitr", "Rcpp"))
PM10data <- read.delim("C:/Users/Elise/Desktop/GitHub/pollute.github.io/data/PM10data.csv")
View(PM10data)
read_csv(./data/PM10data.csv)
read.csv(./data/PM10data.csv)
read.csv('./data/PM10data.csv')
View(PM10data)
read.csv('./data/PM10data.csv')
d = read.csv('./data/PM10data.csv')
View(d)
View(d)
d = read_csv('./data/PM10data.csv')
install.packages(c("readr", "readxl", "dplyr", "tidyr", "nycflights13", "gapminder"))
library("readr", lib.loc="~/R/win-library/3.2")
library("rmarkdown", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("gapminder", lib.loc="~/R/win-library/3.2")
library("nycflights13", lib.loc="~/R/win-library/3.2")
library("dplyr", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
library("readxl", lib.loc="~/R/win-library/3.2")
d = read_csv('./data/PM10data.csv')
d = read.csv('./data/EUSO2.csv')
d2 = read_csv('./data/EUSO2.csv')
View(d2)
View(d2)
head(d)
summary(d)
head(d2)
summary(d2)
summary(d)
